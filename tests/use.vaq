
; use

(use foreigner "modules/proc.vaq")
(use m "modules/macro.vaq")

; two-part factorial
(use mx "modules/x.vaq")
(use my "modules/y.vaq")

(use importer "modules/imports.vaq")


(sys.test 'use-proc-file
    (let ()
        (= (foreigner.go 1 2) '(foreigner 1 2))))

(sys.test 'use-macro-file
    (let ()
        (and
            (= (m.quote-xyz 1 2 3) '(1 2 3))
            (= (send (m.calc-xyz 1 2 3) 'code) '(proc (v) (* v 17)))
            (= ((m.calc-xyz 1 2 3) 4 ) 68))))

(sys.test 'use-mutually-recursive
   (let ()
      (and
         (= 120 (mx.f 5))
         (= 120 (my.f 6)))))

(sys.test 'import-proc
   (let ()
      (import importer foo bar baz)
      (= 6 (baz foo bar))))

(sys.test 'import-macro
   (let ()
      (import importer bax quux)
      (= (bax "x") '("x" "x" "x"))
      (= (bax '(2 3 5)) '((2 3 5) (2 3 5) (2 3 5)))
      (= (quux 23) 230)))

(sys.test 'use-proc-https
    (let () 
        (use foreigner "https://raw.githubusercontent.com/TurtleKitty/Vaquero/master/tests/modules/proc.vaq")
        (= (foreigner.go 1 2) '(foreigner 1 2))))

(sys.test 'use-macro-https
    ((proc ()
        (use m "https://raw.githubusercontent.com/TurtleKitty/Vaquero/master/tests/modules/macro.vaq")
        (and
            (= (m.quote-xyz 1 2 3) '(1 2 3))
            (= (send (m.calc-xyz 1 2 3) 'code) '(proc (v) (* v 17)))
            (= ((m.calc-xyz 1 2 3) 4 ) 68)))))

(macro github (name sym)
   (def txt sym.to-text)
   (def xs (txt.split "/"))
   (def user xs.0)
   (def repo xs.1)
   (def module-path
      (cat (cat.apply (xs.drop 2) (: with "/")) ".vaq"))
   (def uri (cat "https://raw.githubusercontent.com" user repo "master" module-path with: "/"))
   %(use $name $uri))

(sys.test 'use-proc-github
   (let () 
      (github p turtlekitty/vaquero/tests/modules/proc)
      (= (p.go 1 2) '(foreigner 1 2))))

(sys.test 'use-macro-github
   (let ()
      (github m turtlekitty/vaquero/tests/modules/macro)
      (and
         (= (m.quote-xyz 1 2 3) '(1 2 3))
         (= (send (m.calc-xyz 1 2 3) 'code) '(proc (v) (* v 17)))
         (= ((m.calc-xyz 1 2 3) 4 ) 68))))

