
(test dotted-pairs
    (= 
        (quote ((1 . 2) (1 2 3) (1 2 3) (1 2 3 . 4) (1 2 3 . 4) (1 2 3 4 5)))
        (list
            (quote (1 . 2))
            (quote (1 . (2 . (3 . ()))))
            (quote (1 2 3))
            (quote (1 2 3 . 4))
            (quote (1 . (2 . (3 . 4))))
            (quote (1 2 3 . (4 5))))))

(test quote
    (and
        (= 'foo (quote foo))
        (= '(1 2) (quote (1 2)))))

(test quasiquote
    (let (foo 1 bar '(1 2) baz '(3 4 5))
        (and
            (= (list 'foo bar 3 4 5)
              %(foo $bar @baz))
            (= (list 'foo bar 3 4 5)
              `(foo ,bar @baz)))))

(test rune-literal
    (= \f (send "foo" 0)))

(test pair-literal
    (= (pair 'x 'y)
       '(x . y)))

(test vector-literal
    (= (vector 1 2 (list 3 4 5))
       (vector: 1 2 (3 4 5))))

(test matrix-literal
    (= (matrix (1 2) (3 4))
       (# (1 2) (3 4))))

(test table-literal
    (= (table 'x 1 'y (list 'a 2))
       (table: x 1 y (a 2))))

(test text-literal
    (let ()
        (def t1 (text: Hello, world!   ))
        (= t1 "Hello, world!")
        (def t2
            (text:
Hello,
ladies!

:]

            ))
        (def t3 (text: (sub (forms (ftw)))))
        (and
            (= t1 "Hello, world!")
            (= t2 "Hello,\nladies!\n\n:]")
            (= t3 "(sub (forms (ftw)))"))))

(test template-literal
    (let (x 2 y 3)
        (= 
            (template: x: {{ x }} y: {{ y }} (z: {{ (+ x y) }})      )
            "x: 2 y: 3 (z: 5)")))

