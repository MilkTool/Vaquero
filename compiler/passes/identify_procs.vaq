
(use gen "generic.vaq")

(export transform)

; (lambda (args) bodies...) -> (lambda $id (args) bodies...)
; (proc (args) bodies...)   -> (proc $id (args) bodies...)

(def db null)

(proc id-proc (form)
   (def id (uuid))
   (db.set! id form)
   %($form.head $id $form.1 @(transform form.tail.tail db)))

(proc transform (form)
   (when rest (set! db rest.head))
   (if (pair? form)
      (case form.head
         (def if quote seq wall gate guard fail)
            ((gen.transform form.head) transform form)
         (capture)
            ((gen.transform 'seq) transform form) ; after capture-lambda
         (lambda proc)
            (id-proc form)
         default: ((gen.transform 'application) transform form))
      form))

